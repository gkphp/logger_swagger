{
  "openapi": "3.0.0",
  "info": {
    "title": "Student API",
    "description": "API for managing students",
    "version": "1.0.0"
  },
  "paths": {
    "/students": {
      "post": {
        "summary": "Create a new student",
        "tags": ["Students"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Student created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get all students",
        "tags": ["Students"],
        "responses": {
          "200": {
            "description": "A list of students",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error fetching students"
          }
        }
      }
    },
    "/students/{id}": {
      "get": {
        "summary": "Get a student by ID",
        "tags": ["Students"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the student to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Student fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "404": {
            "description": "Student not found"
          }
        }
      },
      "put": {
        "summary": "Update a student by ID",
        "tags": ["Students"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the student to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Student updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "404": {
            "description": "Student not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a student by ID",
        "tags": ["Students"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the student to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Student deleted successfully"
          },
          "404": {
            "description": "Student not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Student": {
        "type": "object",
        "required": ["firstName", "lastName", "email", "dateOfBirth"],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the student"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the student"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the student"
          },
          "email": {
            "type": "string",
            "description": "The email of the student",
            "format": "email"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "description": "The birth date of the student"
          }
        }
      }
    }
  }
}
